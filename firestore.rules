rules_version = '2';
service cloud.firestore {
  // Helper function to check if user is admin
  function isAdmin() {
    return request.auth != null && 
      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
  }

  // Helper function to check if the request is updating only notification-related fields
  function isUpdatingNotificationFields() {
    let allowedFields = ['expoPushToken', 'tokenUpdatedAt'];
    return request.resource.data.diff(resource.data).affectedKeys()
      .hasOnly(allowedFields);
  }

  match /databases/{database}/documents {
    // User profile data
    match /users/{userId} {
      // Allow users to read their own data
      allow read: if request.auth != null;
      // Allow users to read all user data (needed for notifications)
      allow list: if request.auth != null;
      // Allow users to update their own data
      allow update: if request.auth != null && (
        request.auth.uid == userId && (
          // Allow updating notification-related fields
          isUpdatingNotificationFields() ||
          // Or allow updating other fields if they're not changing sensitive data
          (!request.resource.data.diff(resource.data).affectedKeys()
            .hasAny(['isAdmin', 'role', 'permissions']))
        )
      );
      // Allow creating new user documents
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Notification tokens collection
    match /notification_tokens/{tokenId} {
      allow read: if request.auth != null;  // Any authenticated user can read tokens
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid ||  // Users can update their own tokens
        isAdmin()  // Admins can update any token
      );
      allow delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||  // Users can delete their own tokens
        isAdmin()  // Admins can delete any token
      );
    }
    
    // Navigation history
    match /navigation_history/{historyId} {
      allow read, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // General accessibility feedback access
    match /accessibility_feedback/{document=**} {
      allow read: if true;  // Anyone can read accessibility data
      allow write: if request.auth != null;  // Only authenticated users can write
    }

    // Admin-specific accessibility feedback management
    match /accessibility_feedback/{feedbackId} {
      allow read: if true;  // Anyone can read feedback
      allow create: if request.auth != null;  // Logged in users can create
      allow update, delete: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.userId);  // Admins or owners can update/delete
    }

    // Notifications collection rules
    match /notifications/{notificationId} {
      allow read: if request.auth != null;  // Any authenticated user can read notifications
      allow create: if request.auth != null;  // Any authenticated user can create notifications
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid ||  // Users can update their own notifications
        isAdmin()  // Admins can update any notification
      );
      allow delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||  // Users can delete their own notifications
        isAdmin()  // Admins can delete any notification
      );
    }
  }
}